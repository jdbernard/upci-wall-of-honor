openapi: 3.0.3
info:
  version: 1.0.0
  title: UPCI Wall of Honor API
  description: API to the UPCI Wall of Honor display.
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: Jonathan Bernard
    email: jdb@jdb-tech.com
servers:
  - url: 'https://api.dev.upci-woh.jdb-labs.com/v1'
    description: Development server
  - url: 'https://api.demo.upci-woh.jdb-labs.com/v1'
    description: Demo server
  - url: 'https://api.upciwallofhonor.org/v1'
    description: Production server
paths:
  /ministers:
    get:
      summary: List all ministers records.
      operationId: listMinisters
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Minister'
    post:
      summary: Create a new minister record.
      operationId: createMinister
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Minister'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minister'
components:
  schemas:
    Minister:
      type: object
      required:
        - id
        - slug
        - state
        - name
        - isDeceased
      properties:
        id:
          description: 'Unique, permanent identifier for this record (UUID).'
          example: 3fafe0bb-4db5-4e82-ae69-b31590f1b72b
          type: string
        slug:
          description: URL-friendly name for this minister.
          example: john-q-c-minister
          type: string
        state:
          description: Publishing state of this record.
          enum:
            - archived
            - draft
            - published
          example: published
          type: string
        name:
          description: Full name.
          type: object
          required:
            - given
            - additional
          properties:
            given:
              description: Given or first name.
              example: John
              type: string
            surname:
              description: 'Surname: last or family name.'
              example: Minister
              type: string
            prefix:
              example: Dr.
              type: string
            suffix:
              example: Sr.
              type: string
            additional:
              description: 'Middle names, initials, nicknames, etc.'
              example:
                - Q.
                - C.
              type: array
              items:
                type: string
        dateOfBirth:
          type: string
          example: '1939-01-19'
          pattern: '\d{4}-\d{2}-\d{2}'
        dateOfDeath:
          type: string
          example: '2019-05-10'
          pattern: '\d{4}-\d{2}-\d{2}'
        isDeceased:
          example: true
          type: boolean
        ootfYearIncluded:
          description: >-
            Year that this minister was inducted into the Order of the Faith.
            the presence of this value also serves as a flag indicating that
            this minister is a member of the Order of the Faith.
          type: number
        details:
          type: object
          required:
            - photo
            - biography
          properties:
            photo:
              type: object
              properties:
                uri:
                  example: 'https://oof.upci.org/img/ootf/image.png'
                  type: string
                widthInPx:
                  example: 520
                  type: number
                heightInPx:
                  type: number
                xOffsetInPx:
                  example: 14
                  type: number
                yOffsetInPx:
                  example: 14
                  type: number
            biography:
              description: HTML-formatted rich text biography.
              example: John Minister was born...
              type: string
